`timescale  10ns / 10ns
module Matrix_T;
        // Matrix Parameters   
        parameter PERIOD  = 10;


        // Matrix Inputs
        reg   clk                                  = 0 ;
        reg   rst_n                                = 0 ;
        reg   [127:0]  data                        = 0 ;

        // Matrix Outputs
        wire  [7:0]  rowO                          ;
        wire  [7:0]  colR                          ;
        wire  [7:0]  colG                          ;

        always #(PERIOD/2)  clk=~clk;
        initial #(PERIOD*2) rst_n  =  1;
        Matrix  u_Matrix (
                .clk                     ( clk            ),
                .rst_n                   ( rst_n          ),
                .data                    ( data   [127:0] ),

                .rowO                    ( rowO   [7:0]   ),
                .colR                    ( colR   [7:0]   ),
                .colG                    ( colG   [7:0]   )
        );
        initial data = {
                2'b00,2'b00,2'b00,2'b00,2'b00,2'b00,2'b00,2'b10,
                2'b00,2'b00,2'b00,2'b00,2'b00,2'b00,2'b00,2'b00,
                2'b00,2'b00,2'b00,2'b00,2'b00,2'b00,2'b00,2'b00,
                2'b00,2'b00,2'b00,2'b00,2'b11,2'b00,2'b00,2'b00,
                2'b00,2'b00,2'b00,2'b11,2'b00,2'b00,2'b00,2'b00,
                2'b00,2'b00,2'b00,2'b00,2'b00,2'b00,2'b00,2'b00,
                2'b00,2'b00,2'b00,2'b00,2'b00,2'b00,2'b00,2'b00,
                2'b01,2'b00,2'b00,2'b00,2'b00,2'b00,2'b00,2'b00
        };
        initial #1000 $finish;
endmodule